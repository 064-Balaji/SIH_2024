datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  fullName    String
  email       String       @unique
  password    String
  userType    UserType
  startups    Startup[] // One-to-many relationship with Startup
  innovations Innovation[] // One-to-many relationship with Innovation
  session     Session?
  image       String?
}

model Startup {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  description  String
  type         SoftwareType?
  domain       Domain?
  vision       String?
  mission      String?
  imageURL     String?
  userId       String        @db.ObjectId
  user         User          @relation(fields: [userId], references: [id]) // Many-to-one relationship with User
  performances Performance[] // One-to-many relationship with Performance
  gstin        String?       @unique
  gstInfo      GSTInfo?
}

model GSTInfo {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  gstin        String  @unique // GST Identification Number (nullable)
  retPeriod    Int?
  checksum     String?
  summaryType  String?
  totalRecords Int?
  totalTax     Float?
  actualTax    Float?
  totalValue   Float?
  startup      Startup @relation(fields: [gstin], references: [gstin])
}

model Performance {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  startupId String   @db.ObjectId
  startup   Startup  @relation(fields: [startupId], references: [id])
  turnover  Float
  profit    Float
  year      Int
  createdAt DateTime @default(now())
}

enum UserType {
  INVESTOR
  ENTREPRENEUR
  INNOVATOR
}

enum SoftwareType {
  APPLICATION
  SYSTEM
  PLATFORM
  OTHER
}

enum Domain {
  HEALTHCARE
  FINTECH
  EDUCATION
  ECOMMERCE
  OTHER
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @unique @db.ObjectId
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Innovation {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  images       Image[] // List of images related to the innovation
  detailedDesc String? // Detailed description of the innovation
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  innovatorId  String   @db.ObjectId
  innovator    User     @relation(fields: [innovatorId], references: [id])
}

model Image {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  url          String // URL of the image
  innovationId String     @db.ObjectId
  innovation   Innovation @relation(fields: [innovationId], references: [id])
}
